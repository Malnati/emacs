
* Keybindings
  Ref: [[http://xahlee.info/comp/unicode_arrows.html][Unicode characters by Xha Lee]] n [[http://ergoemacs.org/emacs/unicode_basics.html][Unicode Basics by Ergoemacs]].

* Custom Code
#+BEGIN_SRC emacs-lisp
  (message "Evaluating keybindings block...")

  ;;--------------------------------------------------------
  ;; Unsetting the keys I don’t want. 
  ;;--------------------------------------------------------
  (message "Unbinding the keys I don’t want... ")  
  (global-unset-key (kbd "C-p") )
  (global-unset-key (kbd "C-v") )
  (global-unset-key (kbd "<mouse-3>") )
  (global-unset-key (kbd "<mouse-2>") )
(message "Unbinding done!")


  ;;              【Menu →】 uses Arrows to move between its windows
  ;;              【Menu ←】 uses Arrows to move between its windows
  ;;              【Menu ↑】 uses Arrows to move between its windows
  ;;              【Menu ↓】 uses Arrows to move between its windows
  ;;              【Menu SPC】 Expand the marked region in semantic increments (negative prefix to reduce region).
  ;;              【Menu f】 Expand the marked region in semantic increments (negative prefix to reduce region).
  ;;              【Menu m】 Automatically toggle multiple cursor on the current position.


  ;;--------------------------------------------------------
  ;; Rebinding Gnus keys
  ;;--------------------------------------------------------
  (define-key gnus-group-mode-map
  ;; list all the subscribed groups even they contain zero un-read messages
  (kbd "o") 'my-gnus-group-list-subscribed-groups)

  ;;--------------------------------------------------------
  ;; Rebinding minibuffer keys
  ;;--------------------------------------------------------
  ;;【M-x →】 uses Arrows to move between its history elements
  (define-key minibuffer-local-map (kbd "<right>") 'next-matching-history-element)
  ;;【M-x ←】 uses Arrows to move between its history elements 
  (define-key minibuffer-local-map (kbd "<left>") 'previous-matching-history-element)
  ;;【M-x ↑】 uses Arrows to move between its history elements
  (define-key minibuffer-local-map (kbd "<up>") 'previous-history-element)
  ;;【M-x ↓】 uses Arrows to move between its history elements
  (define-key minibuffer-local-map (kbd "<down>") 'next-history-element)

  ;;--------------------------------------------------------
  ;; on Linux, the menu/apps key syntax is <menu>
  ;; on Windows, the menu/apps key syntax is <apps>
  ;;--------------------------------------------------------
  ;; 【Menu/Apps】 make the syntax equal.
  (define-key key-translation-map (kbd "<apps>") (kbd "<menu>"))
  ;; (global-set-key (kbd "<mouse-3>") 'xah-copy-line-or-region)
  ; 【Ctrl+g】 make the Escape key do emacs's.
  (global-set-key [?\C-c ?d] 'mal-fn-duplicate-line-or-region)
  ; 【ESC】 Make ESC Ctrl-g.
  (define-key key-translation-map (kbd "ESC") (kbd "C-g"))
  ; 【Ctrl+z】 make ctrl-z undo.
  (global-set-key (kbd "C-z") 'undo)

  ;;use-region-p
  (global-set-key (kbd "<mouse-3>") 'xah-copy-line-or-region)
  (message " Rebinding global keys, done!")

  ;;--------------------------------------------------------
  ;; 【F2】 Binding Dotemacs files keys
  ;;--------------------------------------------------------  
  (progn
    (message "Binding set of keystrockes over 【F2】 for oppening dotfiles by Hydra...")
  (global-unset-key (kbd "<f2>") )
    (require 'hydra)
    (defhydra hydra-dotfiles (global-map "<f2>")
	      "Dotfiles menu:
	       【F2 ↑】 Switch to previous buffer 
	       【F2 ↓】 Switch to next buffer 
	       【F2 a】 Switch to buffer defined by variable <mal-var-dotfile-alias> 
	       【F2 d】 Switch to buffer defined by variable <mal-var-dotfile-dotemacs> 
	       【F2 e】 Switch to buffer defined by variable <mal-var-dotfile-emacs>
	       【F2 f】 Switch to buffer defined by variable <mal-var-dotfile-functions> 
	       【F2 i】 Switch to buffer defined by variable <mal-var-dotfile-index>
	       【F2 k】 Switch to buffer defined by variable <mal-var-dotfile-keybindings> 
	       【F2 m】 Switch to buffer defined by variable <mal-var-dotfile-menu> 
	       【F2 o】 Switch to buffer defined by variable <mal-var-dotfile-org-mode> 
	      "
	      ("<up>"   (previous-buffer                                 ) "previous"     ) 
	      ("<down>" (next-buffer                                     ) "next"        ) 
	      ("a"      (mal-fn-switch-to-var mal-var-dotfile-alias      ) "alias"       ) 
	      ("d"      (mal-fn-switch-to-var mal-var-dotemacsfile       ) "dotemacs"    ) 
	      ("e"      (mal-fn-switch-to-var mal-var-dotfile-emacs      ) "emacs"       )  
	      ("f"      (mal-fn-switch-to-var mal-var-dotfile-functions  ) "functions"   )
	      ("i"      (mal-fn-switch-to-var mal-var-dotfile-inbox      ) "inbox"       ) 
	      ("k"      (mal-fn-switch-to-var mal-var-dotfile-keybindings) "keybindings" ) 
	      ("m"      (mal-fn-switch-to-var mal-var-dotfile-menu       ) "menu"        )
	      ("o"      (mal-fn-switch-to-var mal-var-dotfile-org-mode   ) "org-mode"    ) 
    )
    (message "Binding set, done!")
  )
        ;; ("m"      ) 'mc/mark-next-like-this          )
        ;; ("<right>") 'windmove-right                  )
	;; ("<left>" ) 'windmove-left                   )
	;; ("<up>"   ) 'windmove-up                     )
	;; ("<down>" ) 'windmove-down                   ) 
	;; ("SPC"    ) 'er/expand-region                ) 
  ;;---------------------------------------------------
  ;; Binding Menu operations
  ;;--------------------------------------------------------
  (progn
    (message "Binding set of keystrockes over 【menu】 for custom operations...")

    (require 'hydra)
    (defhydra hydra-mal-menu (global-map "<menu>")
	      "【Menu c】 Comment marked region.
	       【Menu d】 Function to duplicate line or region.
	       【Menu e】 Call evaluation on the current region.
	       【Menu r】 Redo function call.
	       【Menu u】 Undo function call.
	       "
	      (("b"      ) 'buffer-menu-other-window        ) 
	      (("c"      ) 'comment-or-uncomment-region     ) 
	      (("d"      ) 'mal-fn-duplicate-line-or-region ) 
	      (("e"      ) 'eval-region                     )
	      (("r"      ) 'redo                            )  
	      (("u"      ) 'undo                            ) 
    );end of defhydra
    (message "Binding set, done!")
  )


  ;;----------------------------------------------------------
  ;; Binding 【F10 ←↓↑→】 for Window/Frames switch operations
  ;;----------------------------------------------------------
  (progn
    (message "Binding set of keystrockes ←↓↑→ over 【F10】 for windows operations...")
    (global-unset-key (kbd "<f10>") )
    (global-set-key (kbd "<f10>") (message "【F10 ←↓↑→】 Windows/Frames" ))

    (require 'hydra)
    (defhydra hydra-mal-switch (global-map "<f10>")
	      "【F10 ↑】 Next window (in Emacs)
	       【F10 ↓】 Previous window (in Emacs)
	       【F10 →】 Next frame (in OS)
	       【F10 ←】 Previous frame (in OS)
	       "
	      ("<up>"    (other-window  1)  "next window"     ) 
	      ("<down>"  (other-window -1)  "previous window" ) 
	      ("<left>"  (other-frame   1)  "previous frame"      )
	      ("<right>" (other-frame  -1)  "next frame"  )
    );end of defhydra
    (message "Binding set, done!")
  )

  ;;--------------------------------------------------------
  ;; 【F12】 Binding Zoom keys
  ;;--------------------------------------------------------
  (progn
    (message "Binding set of keystrockes over 【F12】 for increasing or decreasing text scale by Hydra...")
  (global-unset-key (kbd "<f12>") )
    (global-set-key (kbd "<f12>") (message "【F12 ↓↑】 Text Scale Increase/Decrease" ))
    (require 'hydra)
    (defhydra hydra-mal-zoom (global-map "<f12>")
	      "Zoom menu: ↓↑
	       【F12 ↑】 Text scale increase.
	       【F12 ↓】 Text scale decrease.
	      "
	      ("<up>" text-scale-increase "in")
	      ("<down>" text-scale-decrease "out")
    );end of defhydra
    (message "Binding set, done!")
  )

#+END_SRC

#+RESULTS:
:  Binding set, done!
